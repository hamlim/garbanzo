import { describe, expect, test } from "bun:test";
import nodePath from "node:path";
import { memfs } from "memfs";
import {
  generateEntries,
  generateImports,
  generateRoutes,
} from "../entries-generation";
import { type RequiredFSFeatures, findRoutes } from "../find-routes";

function makeFS(tree: Parameters<typeof memfs>[0]): RequiredFSFeatures {
  let memoryFs = memfs(tree, "./");
  return memoryFs.fs as RequiredFSFeatures;
}

let fs = makeFS({
  src: {
    app: {
      "@root.tsx": "export default function Root() {}",
      "@layout.tsx": "export default function Layout() {}",
      "page.tsx": "export default function Homepage() {}",
      dashboard: {
        "@not-found.tsx": "export default function NotFound() {}",
        "@layout.tsx": "export default function Layout() {}",
        "page.tsx": "export default function Dashboard() {}",
      },
      blog: {
        "some-post": {
          "page.static.tsx": "export default function BlogPost() {}",
        },
      },
      api: {
        "route.ts": "export default function apiRoute() {}",
      },
      "[id]": {
        "page.tsx": "export default function DynamicSegment({id}) {}",
      },
      "[...slug]": {
        "page.tsx": "export default function CatchAllSegment({slug}) {}",
      },
    },
  },
});

let routes = findRoutes("./src/app/", {
  fs,
});

describe("generateImports", () => {
  test("should generate imports", () => {
    expect(
      generateImports(
        {
          appPath: "./src/app",
          routeDefinitions: routes,
        },
        {
          nodePath,
        },
      ),
    ).toEqual([
      'import layout0 from "./app/@layout";',
      'import root1 from "./app/@root";',
      'import page2 from "./app/[...slug]/page";',
      'import page3 from "./app/[id]/page";',
      'import route4 from "./app/api/route";',
      'import page5 from "./app/blog/some-post/page.static";',
      'import layout6 from "./app/dashboard/@layout";',
      'import notFound7 from "./app/dashboard/@not-found";',
      'import page8 from "./app/dashboard/page";',
      'import page9 from "./app/page";',
    ]);
  });
});

describe("generateRoutes", () => {
  test("should generate routes", () => {
    expect(generateRoutes(routes)).toEqual([
      'createLayout({\n  render: "dynamic",\n  path: "/",\n  component: layout0,\n}),',
      'createRoot({\n  render: "dynamic",\n  component: root1,\n}),',
      'createPage({\n  render: "dynamic",\n  path: "/[...slug]",\n  component: page2,\n}),',
      'createPage({\n  render: "dynamic",\n  path: "/[id]",\n  component: page3,\n}),',
      'createApi({\n  render: "dynamic",\n  path: "/api",\n  handlers: {\n    GET: route4,\n    POST: route4,\n    PUT: route4,\n    DELETE: route4,\n    PATCH: route4,\n  },\n}),',
      'createPage({\n  render: "static",\n  path: "/blog/some-post",\n  component: page5,\n}),',
      'createLayout({\n  render: "dynamic",\n  path: "/dashboard",\n  component: layout6,\n}),',
      'createPage({\n  render: "dynamic",\n  path: "/dashboard/[...path]",\n  component: notFound7,\n}),',
      'createPage({\n  render: "dynamic",\n  path: "/dashboard",\n  component: page8,\n}),',
      'createPage({\n  render: "dynamic",\n  path: "/",\n  component: page9,\n}),',
    ]);
  });
});

describe("generateEntries", () => {
  test("should generate entries", () => {
    expect(
      generateEntries(
        {
          appPath: "./src/app",
          routeDefinitions: routes,
        },
        { nodePath },
      ),
    ).toEqual(
      `/* this file is automatically generated by garbanzo */
/* DO NOT MANUALLY EDIT THIS FILE */

import { createPages } from "waku";
import type { PathsForPages } from "waku/router";

import layout0 from "./app/@layout";
import root1 from "./app/@root";
import page2 from "./app/[...slug]/page";
import page3 from "./app/[id]/page";
import route4 from "./app/api/route";
import page5 from "./app/blog/some-post/page.static";
import layout6 from "./app/dashboard/@layout";
import notFound7 from "./app/dashboard/@not-found";
import page8 from "./app/dashboard/page";
import page9 from "./app/page";

let pages = createPages(async ({ createPage, createLayout, createRoot, createApi }) => [
createLayout({
  render: "dynamic",
  path: "/",
  component: layout0,
}),
createRoot({
  render: "dynamic",
  component: root1,
}),
createPage({
  render: "dynamic",
  path: "/[...slug]",
  component: page2,
}),
createPage({
  render: "dynamic",
  path: "/[id]",
  component: page3,
}),
createApi({
  render: "dynamic",
  path: "/api",
  handlers: {
    GET: route4,
    POST: route4,
    PUT: route4,
    DELETE: route4,
    PATCH: route4,
  },
}),
createPage({
  render: "static",
  path: "/blog/some-post",
  component: page5,
}),
createLayout({
  render: "dynamic",
  path: "/dashboard",
  component: layout6,
}),
createPage({
  render: "dynamic",
  path: "/dashboard/[...path]",
  component: notFound7,
}),
createPage({
  render: "dynamic",
  path: "/dashboard",
  component: page8,
}),
createPage({
  render: "dynamic",
  path: "/",
  component: page9,
}),
]);

declare module "waku/router" {
  interface RouteConfig {
    paths: PathsForPages<typeof pages>;
  }
  interface CreatePagesConfig {
    pages: typeof pages;
  }
}

export default pages;`,
    );
  });
});
